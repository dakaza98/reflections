1. What happens when you initialize a repository? Why do you need to do it?
	A hidden file was created with metadata about the repository. This is necessary because this is how git knows what folder it should track changes in.
	
2. How is the staging area different from the working directory and the repository? What value do you think it offers?
	The staging area only contains the files you want to commit. This makes it easier to make commits for every logical update.
	
3. How can you use the staging area to make sure you have one commit per logical change?
	There I can see what changes i have made and what is going to be commited.
	
4. What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	It helps when you add new changes that aren't a part of the real program such as experimental changes. 
	
5. How do the diagrams help you visualize the branch structure?
	It gives a clear image of how my project is structured and can prevent mistakes.
	
6. What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	The two branches come together as one commit with changes from both branches.
	
7. What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
	It is faster and more efficient than sitting and checking all the code. However, it might not always go as you want it to.